# Contract: Validate Vault
# Command: will-encrypt validate

command: validate

description: |
  Validate vault file integrity, format correctness, and fingerprint matches without
  exposing any secrets. Suitable for periodic audits and health checks. Does NOT
  require shares or decrypt any content.

arguments:
  - name: --vault
    type: path
    required: false
    default: "./vault.yaml"
    validation:
      - must_exist: true
      - readable: true
      - format: yaml
    description: Path to vault file
    example: "--vault /path/to/vault.yaml"

  - name: --verbose
    type: boolean
    required: false
    default: false
    description: Show detailed validation checks and fingerprints
    example: "--verbose"

  - name: --check-format
    type: boolean
    required: false
    default: true
    description: Validate YAML structure and required fields
    example: "--check-format"

  - name: --check-fingerprints
    type: boolean
    required: false
    default: true
    description: Recompute and verify SHA-256 fingerprints
    example: "--check-fingerprints"

  - name: --check-algorithms
    type: boolean
    required: false
    default: true
    description: Verify algorithm choices match constitutional requirements
    example: "--check-algorithms"

outputs:
  terminal_display:
    compact_mode:
      format: |
        Vault: /path/to/vault.yaml
        Status: ✓ VALID
        Messages: 15
        Threshold: 3 of 5

    verbose_mode:
      format: |
        ====================================
        VAULT VALIDATION
        ====================================

        Vault: /path/to/vault.yaml
        Version: 1.0
        Created: 2025-10-07T10:30:00Z

        FORMAT CHECKS:
        ✓ YAML structure valid
        ✓ All required sections present (keys, messages, manifest, guides)
        ✓ Keys section complete (RSA public, RSA encrypted private, Kyber public, Kyber encrypted private)
        ✓ Messages array valid (15 messages)
        ✓ Manifest complete (threshold, algorithms, fingerprints, rotation_history)

        FINGERPRINT CHECKS:
        ✓ RSA public key SHA-256: a3f4... (matches manifest)
        ✓ Kyber public key SHA-256: 7c2e... (matches manifest)
        ✓ Vault SHA-256: 9d81... (matches manifest)

        ALGORITHM CHECKS:
        ✓ Keypair: RSA-4096 + Kyber-1024 (hybrid) ✓ Constitutional compliance
        ✓ Passphrase entropy: 384 bits ✓ Constitutional compliance
        ✓ Secret sharing: Shamir SSS over GF(2^8) ✓ Constitutional compliance
        ✓ Message encryption: AES-256-GCM ✓ Constitutional compliance
        ✓ KDF: PBKDF2-HMAC-SHA512 (600k iterations) ✓ Constitutional compliance

        THRESHOLD CONFIGURATION:
        ✓ K: 3 (valid range 1-255)
        ✓ N: 5 (valid range K-255)
        ✓ Constraint satisfied: N >= K

        MESSAGE INTEGRITY:
        ✓ Message 1: Title present, ciphertext present, nonce (96 bits), tag (128 bits), KEKs present
        ✓ Message 2: [same checks]
        [... all messages]

        ROTATION HISTORY:
        ✓ 2 events logged
        - 2025-10-07T10:30:00Z: initial_creation (K=3, N=5)
        - 2025-11-15T14:00:00Z: share_rotation (K=3, N=5)

        ====================================
        VALIDATION RESULT: ✓ PASS
        ====================================

        All checks passed. Vault is valid and ready for use.
        No secrets were exposed during validation.

exit_codes:
  0: All validation checks passed
  1: Invalid arguments
  2: Vault file not found
  3: YAML parse error (invalid format)
  4: Missing required sections or fields
  5: Fingerprint mismatch (tampering detected or vault modified without update)
  6: Algorithm non-compliance with constitution
  7: Invalid threshold configuration (K > N, out of range)
  8: Message structure errors (missing fields, invalid sizes)

performance:
  target_duration: "< 2 seconds for vault with 1000 messages"
  bottlenecks:
    - YAML parsing (~0.1 sec)
    - SHA-256 fingerprint computation (~0.5 sec for 10 MB vault)
    - Message structure validation (~0.01 sec per message)

security_requirements:
  - NO secrets exposed (shares, passphrases, private keys, plaintext messages)
  - NO decryption operations performed
  - Fingerprint verification detects tampering or corruption
  - Public key validation ensures correct formats (PEM, Base64)

validation_checklist:
  format_checks:
    - YAML syntax valid
    - version field present and supported
    - created_timestamp valid ISO 8601
    - keys section present with all 4 sub-keys
    - messages array present (may be empty)
    - manifest section present with all required fields
    - recovery_guide, policy_document, crypto_notes present and non-empty

  key_checks:
    - RSA public key: Valid PEM format, 4096-bit modulus
    - RSA encrypted private key: Valid PEM PKCS#8 encrypted format
    - Kyber public key: Valid base64, expected size (~1568 bytes)
    - Kyber encrypted private key: Valid base64, expected size (~1568 bytes encrypted)
    - KDF parameters: algorithm, iterations, salt present

  message_checks:
    - Each message has: id, title, ciphertext, rsa_wrapped_kek, kyber_wrapped_kek, nonce, tag, created, size
    - IDs sequential (1, 2, 3, ...)
    - Title non-empty, max 256 chars
    - Ciphertext valid base64
    - Nonce 96 bits (12 bytes base64)
    - Tag 128 bits (16 bytes base64)
    - Size <= 65536 bytes

  manifest_checks:
    - threshold.k and threshold.n present, valid range, K <= N
    - algorithms section lists all 5 required algorithms
    - fingerprints section has 3 SHA-256 hashes (64 hex chars each)
    - rotation_history array present (at least 1 event: initial_creation)

  fingerprint_checks:
    - Recompute SHA-256 of RSA public key, compare to manifest.fingerprints.rsa_public_key_sha256
    - Recompute SHA-256 of Kyber public key, compare to manifest.fingerprints.kyber_public_key_sha256
    - Recompute SHA-256 of entire vault (excluding vault_sha256 field itself), compare to manifest.fingerprints.vault_sha256

  constitutional_checks:
    - Keypair algorithm includes RSA-4096 and Kyber-1024
    - Passphrase entropy = 384 bits
    - Message encryption = AES-256-GCM
    - KDF iterations >= 600,000

example_usage: |
  # Quick validation
  will-encrypt validate --vault vault.yaml
  Vault: vault.yaml
  Status: ✓ VALID
  Messages: 15
  Threshold: 3 of 5

  # Detailed validation
  will-encrypt validate --vault vault.yaml --verbose
  [Full validation report as shown above]

  # Validation with fingerprint mismatch (tampered vault)
  will-encrypt validate --vault vault.yaml
  Vault: vault.yaml
  Status: ✗ INVALID
  Error: Fingerprint mismatch - vault_sha256 does not match computed hash
  This may indicate tampering or corruption. Restore from backup.

  Exit code: 5
